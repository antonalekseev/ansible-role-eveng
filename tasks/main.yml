---

- fail:
    msg: "Unsupported OS family {{ ansible_os_family }}"
  when: ansible_os_family not in ansible_eveng_supported_os_families

- fail:
    msg: "Community edition is not available for 3.0.x releases of EVE-NG."
  when: ansible_eveng_version == 'bionic' and ansible_eveng_edition == 'community'

- name: Include provider-specific variables
  include_vars: "{{ ansible_eveng_provider }}.yml"

- name: Include variables specific to EVE-NG edition
  include_vars: "{{ ansible_eveng_edition }}.yml"

- name: Include variables specific to EVE-NG release
  include_vars: "eveng_{{ ansible_eveng_release }}.yml"

- name: Wait for the host to be available
  wait_for_connection:

- name: Gather facts
  setup:

- name: Update all packages
  apt:
    name: "*"
    state: latest  # noqa 403
    update_cache: yes
    force_apt_get: yes

- name: Set Python3 as the default one
  alternatives:
    name: python
    link: /usr/bin/python
    path: /usr/bin/python3
    priority: 10

- name: Reset SSH connection
  meta: reset_connection

- name: Add EVE-NG apt key
  apt_key:
    url: "{{ ansible_eveng_apt_key_url }}"
    state: present

- name: Add EVE-NG repository
  apt_repository:
    repo: "{{ ansible_eveng_apt_repository }}"
    state: present

- include_tasks: 'install_{{ ansible_eveng_edition }}.yml'

- name: Set hostname in /etc/hosts
  lineinfile:
    path: /etc/hosts
    regexp: '^127\.0\.0\.1'
    line: '127.0.0.1 {{ inventory_hostname }}'
    insertbefore: BOF
    firstmatch: yes
  tags: hostname

- name: Set hostname in /etc/hostname
  copy:
    content: '{{ inventory_hostname }}'
    dest: /etc/hostname
  tags: hostname

- name: Enable apache2 SSL module
  apache2_module:
    name: ssl
    state: present
  tags: tls

- name: Enable apache2 rewrite module
  apache2_module:
    name: rewrite
    state: present
  tags: tls

- name: Ensure SSL directories exist
  file:
    path: "{{ item }}"
    state: directory
  loop:
    - /etc/ssl/private
    - /etc/ssl/certs
  tags: tls

- name: Copy SSL certificate
  copy:
    src: "{{ ansible_eveng_ssl_cert }}"
    dest: "/etc/ssl/certs/apache-cert.pem"
  tags: tls
  notify: Restart Apache

- name: Copy SSL key
  copy:
    src: "{{ ansible_eveng_ssl_key }}"
    dest: "/etc/ssl/private/apache-key.pem"
  tags: tls
  notify: Restart Apache

- include_tasks: 'tls_{{ ansible_eveng_edition }}.yml'
  tags: tls

- name: Check Apache2 config
  command: /usr/sbin/apachectl configtest
  changed_when: false
  tags: tls

- name: Check if web UI admin password is already set
  command: "{{ ansible_eveng_mysql_command }} -e \"select username from users where password=sha2('{{ ansible_eveng_admin_password }}', 256)\""
  changed_when: false
  register: eveng_admin
  tags: password

- name: Change default web UI admin password if needed
  command: "{{ ansible_eveng_mysql_command }} -N -e \"update users set password=sha2('{{ ansible_eveng_admin_password }}', 256) where username='admin'\""
  when: eveng_admin.stdout != "admin"
  tags: password

- include_tasks: '{{ ansible_eveng_provider }}.yml'
  tags: interfaces

- name: Finish configuration
  file:
    path: /opt/ovf/.configured
    state: touch
    modification_time: preserve
    access_time: preserve
  register: configured

- name: Run pending handlers now
  meta: flush_handlers

- name: Wait for the host to become available
  wait_for_connection:

- name: Wait for license data to propagate
  command: /opt/unetlab/wrappers/unl_wrapper -a platform
  register: unl_wrapper
  retries: 10
  delay: 30
  until: unl_wrapper.rc == 0

- include_tasks: 'wireguard.yml'
  tags: wireguard

- name: Install custom config-scripts
  copy:
    src: '{{ item }}'
    dest: '{{ ansible_eveng_config_scripts_dir }}/{{ item | basename }}'
    mode: 'u=rwx,g=rx,o=rx'
    backup: yes
  loop: "{{ lookup('fileglob', 'files/config-scripts/config_*', wantlist=True) }}"

- name: Create images download directory
  file:
    path: /eveng-images/
    state: directory
  tags: images

- name: Download images
  get_url:
    url: "{{ item }}"
    dest: "/eveng-images/{{ item | basename }}"
  loop: "{{ ansible_eveng_image_urls }}"
  tags: images

- name: Unarchive images
  unarchive:
    src: "/eveng-images/{{ item | basename }}"
    dest: /opt/unetlab/addons/qemu/
    remote_src: yes
  loop: "{{ ansible_eveng_image_urls }}"
  notify: Fix EVE-NG permissions
  tags: images
